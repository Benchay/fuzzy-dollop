//获取应用实例，请求数据的方法
import { http } from '../../../utils/util'

Page({
    data: {
        movies:[
            {url:'http://img04.tooopen.com/images/20130712/tooopen_17270713.jpg'} ,
            {url:'http://img04.tooopen.com/images/20130617/tooopen_21241404.jpg'} ,
            {url:'http://img04.tooopen.com/images/20130701/tooopen_20083555.jpg'} ,
            {url:'http://img02.tooopen.com/images/20141231/sy_78327074576.jpg'}
        ],
        images:[],
        items: [{
            name: "白色",
            id:'0'
        },{
            name: "黑色",
            id:'1'
        },{
            name: "蓝色",
            id:'2'
        },{
            name: "蓝色",
            id:'3'
        },{
            name: "蓝色",
            id:'4'
        },{
            name: "蓝色",
            id:'5'
        }],
        curNav: 0,
        curIndex: 0,
        toView: 'red',
        scrollTop: 100,
        num: 1,
        minusStatus: 'disabled',
        stallName:'',
        businessScopeName:'',
        sellProductNum:0,
        product:'',
        colors:[],
        sizes:[],
        variants:[]
    },

    onLoad:function(options){
      this.setData({
        stallName:options.stallName,
        businessScopeName: options.businessScopeName,
        sellProductNum:options.sellProductNum
      });
      //获取商品信息
      http({
        url:'stock/api/loadProductInfo.do',
        method:'GET',
        data:{productId:options.productId,productCode:options.productCode,companyId:options.companyId},
        func:(data)=>{
          this.setData({
            product:data.result
          });
          if(this.data.product!=undefined){
            let imgs = [];
            if (this.data.product.imgUrl_main != undefined && this.data.product.imgUrl_main !=""){
              imgs.push({ url: this.data.product.imgUrl_main });
            }
            if (this.data.product.imgUrl_1 != undefined && this.data.product.imgUrl_1!=""){
              imgs.push({ url: this.data.product.imgUrl_1});
            }
            if (this.data.product.imgUrl_2 != undefined && this.data.product.imgUrl_2!=""){
              imgs.push({ url: this.data.product.imgUrl_2 });
            }
            if (this.data.product.imgUrl_3 != undefined && this.data.product.imgUrl_3!="") {
              imgs.push({ url: this.data.product.imgUrl_3});
            }
            
            this.setData({
              images:imgs,
              sizes:[],
              colors:this.data.product.colours.split("_"),
              variants: this.data.product.productVariant
            });
           
            if(this.data.colors!=undefined&&this.data.colors.length!=0&&this.data.variants!=undefined&&this.data.variants.length!=0){
              
              let table = this.data.variants,
                  vo = [];
              for(let j = 0;j<table.length;j++){ 
                if(table[j].colour==this.data.colors[0]){
                  let parameters = {name:table[j].size,id:table[j].id,num:0};
                  vo.push(parameters);
                }
              }
              this.setData({
                sizes:vo
              });
            }
          }
        }
      });
    },

    switchRightTab: function(e) {
        let color = e.currentTarget.dataset.id,
          index = parseInt(e.currentTarget.dataset.index);
        this.setData({
            curIndex: index
        })
        let table = this.data.variants,
            vo = [];
        for(let i=0;i<table.length;i++){
          if(table[i].colour==color){
            let param = {name:table[i].size,id:table[i].id,color:table[i].color,num:0};
            vo.push(param);
          }
        }
        this.setData({
          sizes:vo
        });
    },
    goDetails: function() {
        wx.navigateTo({
            url: '../stallStoreDetails/stallStoreDetails'
        })
    },
    upper: function(e) {
        console.log(e)
    },
    lower: function(e) {
        console.log(e)
    },
    scroll: function(e) {
        console.log(e)
    },
    tap: function(e) {
        for (var i = 0; i < order.length; ++i) {
            if (order[i] === this.data.toView) {
                this.setData({
                    toView: order[i + 1]
                })
                break
            }
        }
    },
    tapMove: function(e) {
        this.setData({
            scrollTop: this.data.scrollTop + 10
        })
    },
    /** */
    /* 点击减号 */  
    bindMinus: function (e) {
      let id = e.currentTarget.dataset.id,
        index = parseInt(e.currentTarget.dataset.index);
      var num = this.data.sizes[index].num;
      if(num>0){
        num--;
      }
      // 只有大于一件的时候，才能normal状态，否则disable状态  
      var minusStatus = num <= 0 ? 'disabled' : 'normal';
      // 将数值与状态写回  
      let table = this.data.sizes,
        vo = [];
      for (let i = 0; i < table.length; i++) {
        if (i != index) {
          let param = { name: table[i].name, id: table[i].id, color: table[i].colour, num: table[i].num };
          vo.push(param);
        } else {
          let parameter = { name: table[i].name, id: table[i].id, color: table[i].colour, num: num };
          vo.push(parameter);
        }
        this.setData({
          sizes: vo,
          minusStatus: minusStatus
        });
      }

      // var num = this.data.num;
      // if (num > 1) {
      //   num--;
      // }
      // // 只有大于一件的时候，才能normal状态，否则disable状态  
      // var minusStatus = num <= 1 ? 'disabled' : 'normal';
      // // 将数值与状态写回  
      // this.setData({
      //   num: num,
      //   minusStatus: minusStatus
      // });
    },
    
    /* 点击加号 */
    bindPlus: function (e) {
      let id = e.currentTarget.dataset.id,
          index = parseInt(e.currentTarget.dataset.index);
      var num  = this.data.sizes[index].num + 1;
      let table = this.data.sizes,
          vo = [];
     for(let i = 0;i<table.length;i++){
       if(i!=index){
         let param = {name:table[i].name,id:table[i].id,color:table[i].colour,num:table[i].num};
         vo.push(param);
       }else{
         let parameter = { name: table[i].name, id: table[i].id, color: table[i].colour, num: num };
         vo.push(parameter);
       }
       var minusStatus = num <= 0 ? 'disabled' : 'normal';
       this.setData({
         sizes:vo,
         minusStatus: minusStatus
       });
     }
      // var num = this.data.num;
      //num++;
      // var minusStatus = num < 1 ? 'disabled' : 'normal';
      // this.setData({
        //num: num,
      //   minusStatus: minusStatus
      // });
    },
    /* 输入框事件 */
    bindManual: function (e) {
      var num = e.detail.value;
      this.setData({
        num: num
      });
    }  
})