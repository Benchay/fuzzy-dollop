const app = getApp();
const {http} = require('../../../utils/util.js');
const {createOrderByWx} = require('../../../utils/date.js');
const {payoff, submitOrderAndSignBack, requestPayment} = require('../../../utils/pay.js');


Page({
    data: {
       companys:[],
       totalFee: 0,
       orderids:[],//提交后的订单id集合
       isLocked:false,
       cartType:0      //订单来源，0购物车中，1临时结算中
    },

    /**
     * 加载事件
     */
    onLoad: function (options) {
      this.setData({
        cartType: options.cartType ? options.cartType : 0
      });

      //加载档口商品信息
      this.getCompanysData();
      if (this.data.totalFee > 0) {
        this.setData({
          isLocked: false
        });
      }
    },

    /**
     * 显示页面
    */
    onShow: function () {
      let a = getCurrentPages();
      console.log(a);
    },

    /**
     * 加载选中的商品信息
     */
    getCompanysData(){
      //所有商品总价
      let totalFee = 0;
      let companys;   //选中商品
      if (this.data.cartType === "1") {
        companys = wx.getStorageSync("tempCart"); //结算界面直接跳转过来的
      } else {
        companys = wx.getStorageSync("cart"); //获取购物车中的商品信息
      }

      for(let i = 0; i < companys.length; i++) {
        let company = companys[i];
        let products = company.products; //档口商品集合
        let ctf = 0;      //档口所有商品总价
        let ctn = 0;      //档口所有商品总数
        //遍历商品移除非选中商品，并计算价格
        for(let j = 0; j < products.length; j++) {
          let product = products[j];
          if (product.isSelected) {
            ctf += product.orderNum * parseFloat(product.sellPrice);
            ctn += parseInt(product.orderNum);
          } else {    //移除购物车中非选中的商品
            products.splice(j, 1);
            j--;
          }
        }
        //档口下没有选中商品,就移除档口
        if(products.length == 0) {
          companys.splice(i, 1);
          i--;
          continue;
        }
        totalFee += ctf;
        company.totalFee = ctf.toFixed(2);
        company.totalNum = ctn;
      }
      this.setData({
        companys: companys,
        totalFee: totalFee.toFixed(2)
      });
    },

    /**
     * 提交订单
     */
    submitOrder(){
      //设置提交按钮失效
      this.setData({
        isLocked:true
      });
      //获取当前page
      let pages = getCurrentPages();
      //验证用户登录信息
      let nabeiInfo = app.globalData.nabeiInfo;
      console.log(nabeiInfo);
      if (!nabeiInfo || !nabeiInfo.openId) {   //获取用户信息，
        var obj = { 
          url: '../../index/submitOrders/submitOrders?cartType=' + this.data.cartType, 
          type: 1, 
          from: ''  
        };
        app.globalData.goUrl = obj;
        wx.redirectTo({
          //跳转绑定页面
          url: '../../userInfo/bind/bind'
        })
        return;
      }

      //拼接订单提交数据
      let orders = new Array();
      let companys = this.data.companys;
      for (let i in companys) {
        let company = companys[i];
        let products = company.products;
        for (let j in products) {
          let product = products[j];
          let order = {
            productVariantId:product.id,
            price: product.sellPrice,     //价格传入后台验证
            orderNum: product.orderNum,
            companyId: nabeiInfo.compId,
            busiCompId: product.companyId,
            createUserId: nabeiInfo.user.id
          }
          orders.push(order);
        }
      }
      let that = this;
      //提交订单
      http({
        url: createOrderByWx,
        data: orders,
        func: (data) => {
          console.log(data);
          if(data.isSuccess) {
            //移除购物车中的已被提交的订单
            let uncompanys = wx.getStorageSync("cart");
            for (let i = 0; i < uncompanys.length; i++) {
              let uncompany = uncompanys[i];
              let products = uncompany.products; //档口商品集合
              //遍历商品移除选中商品
              for (let j = 0; j < products.length; j++) {
                let product = products[j];
                if (product.isSelected) {
                  products.splice(j, 1);
                  j--;
                }
              }
              //档口下没有选中商品,就移除档口
              if (products.length == 0) {
                uncompanys.splice(i, 1);
                i--;
              }
            }
            wx.setStorageSync("cart", uncompanys);
            //弹出支付界面
            that.data.orderIds = data.result.orderIds;
            that.orderids = data.result.orderIds//订单ids
            that.orderTotalFee = data.result.totalFee// 传入订单金额
            that.succCall = that.paySucc;
            that.failCall = that.payFail;
            that.payoff(that);

            //清空商品详情页面的商品数量
            if (pages.length > 1) {
              //上一个页面实例对象
              var prePage = pages[pages.length - 2];
              if(prePage.clearNum) {    //清空商品数量
                prePage.clearNum();
              }
            }
          } else {
            let errorMsg = data.errorMsg ? data.errorMsg : "";
            if (errorMsg.indexOf('最新价格为') > -1) {          //价格有误就自动跳转到
              wx.showModal({
                title: "您提交的订单中商品价格有变动，请重新下单",
                icon: 'none',
                showCancel:false,
                complete: function(){   //返回上一级
                  wx.navigateBack({
                    delta: 1
                  })
                } 
              });
            } else {
              wx.showToast({
                title: '提交失败',
                icon: 'none'
              });
            }
            //设置提交按钮可用
            that.setData({
              isLocked: false
            });
          }
        }
      });
    },
    //支付成功
    paySucc(){
      let orderIds = this.data.orderIds;
      if (orderIds.length == 1) {    //单个订单跳转到订单详情页
        wx.redirectTo({
          url: '../../userInfo/orderDetail/orderDetail?id=' + orderIds[0]
        });
      } else {   //多个订单跳转到订单列表页
        wx.redirectTo({
          url: '../../userInfo/myOrder/myOrder?activeIndex=1' //付款成功跳转到待拿货页面
        });
      }
    },
    //支付失败
    payFail({errorMsg}){
      let that = this;
      wx.showToast({
        title: errorMsg,
        icon: 'none',
        complete:()=>{
          //跳转到订单列表页
          setTimeout(function () { 
            let orderIds = that.data.orderIds;
            if(orderIds.length == 1) {    //单个订单跳转到订单详情页
              wx.redirectTo({
                url: '../../userInfo/orderDetail/orderDetail?id=' + orderIds[0]
              });
            } else {        //多个订单跳转到订单列表页
              wx.redirectTo({
                url: '../../userInfo/myOrder/myOrder'
              });
            }
          },1500);
        }
      });
    },
    payoff, submitOrderAndSignBack, requestPayment
})