// pages/index/search/search.js
//获取应用实例，请求数据的方法
const {
    http
} = require("../../../utils/util.js");
Page({

  /**
   * 页面的初始数据
   */
  data: {
    selectPerson:true,
      firstPerson:'商品',
      sortType:5,
      searchType:1,
    cancel_icon: true,
    input_value: "",
      history:false,
      commodity:true,
      stalls:true,
      selectList: [{
        name: "商品",
        type:1
    },{
        name: "档口",
        type:2
    }],
      items: [{
          name: "综合",
          id:5
      },{
          name: "新品",
          id:4
      },{
          name: "人气",
          id:3
      },{
          name: "价格",
          id:2
      }],
      curNav: 0,
      curIndex: 0,
      searchList:[],
      productList:[],
      stallList:[]

  },

  /**
   * 生命周期函数--监听页面加载
   * @pram options--页面跳转带来的参数
   */
  onLoad: function (options) {
    //保存this对象
    const _this = this;
    //请求热搜数据
    http({
      url: "GetSearch",
      loading:true,
      func: (data) => {
        // 成功后加载页面
        _this.initPage(data);
      }
    })
  },

  /**
   * input输入内容时cancel按钮的显示隐藏
   * @pram e 当前点击对象的属性集合
   */
  inputShow(e) {
    let value= e.detail.value;
    if(value!=undefined&&value!=""){
      this.setData({
        history:false,
        commodity:true,
        stalls:true,
        cancel_icon: false
      })
    }else{
      this.setData({
        history: true,
        cancel_icon: true,
        searchList: []
      })
    }
    this.setData({
      searchList: []
    })
    let list = [];
    if (this.data.searchType == 1) {
      list = wx.getStorageSync('searchProductHistory');
    }else{
      list = wx.getStorageSync('searchStallHistory');
    }
    
    if(list!=undefined&&list.length>0){
      let vo = [];
      for(let i = 0 ;i<list.length;i++){
        if(list[i].indexOf(value)>-1){
          vo.push(list[i]);
        }
      }
      this.setData({
        searchList: vo
      })
    }
  },

  /**
   * 搜索输入结束，相当于键盘的完成键
   */
  finishSearch:function(e){
    console.log(this.data.searchType);
    let key = e.detail.value;
    this.search(key);
  },

  search:function(key){
    //获取输入的值
    this.setData({
      input_value: key,
      history: true
    });
    //搜索返回接口调用
    this.searchFunc();
    if (this.data.searchType == 1) {
      this.setData({
        commodity: false,
        stalls: true
      });
      let table = [];
      table.push(key);
      let oldtable = wx.getStorageSync('searchProductHistory');
      if (oldtable != null) {
        for (let i = 0; i < oldtable.length; i++) {
          if (oldtable[i] != key && i < 9) {
            table.push(oldtable[i]);
          }
        }
      }
      wx.setStorageSync('searchProductHistory', table);
      return;
    } else {
      this.setData({
        commodity: true,
        stalls: false
      });
      let table = [];
      table.push(key);
      let oldtable = wx.getStorageSync('searchStallHistory');
      if (oldtable != null) {
        for (let i = 0; i < oldtable.length; i++) {
          if (oldtable[i] != key && i < 9) {
            table.push(oldtable[i]);
          }
        }
      }
      wx.setStorageSync('searchStallHistory', table);
      return;
    }
  },

  /**
   * 搜索接口调用
   */
  searchFunc:function(){
    if (this.data.searchType == 1) {
      http({
        url: "stock/api/queryProduct.do",
        data: { pageIndex: 1, pageSize: 10, sortType: this.data.sortType, applicationType: "1", type: 1, searchKey: this.data.input_value },
        func: (data) => {
          this.setData({
            productList: data.result.results
          });
        }
      });
    } else {
      http({
        url: "cws/stall/queryStall.do",
        data: { pageIndex: 1, pageSize: 10, stall: { name: this.data.input_value } },
        func: (data) => {
          this.setData({
            stallList: data.result.stall.results
          });
        }
      });
    }
  },

  /**
   * 点击搜索历史面板
   */
  clickHistoryPanel:function(e){
    let name = e.currentTarget.dataset.name,
        index = parseInt(e.currentTarget.dataset.index);
        console.log(name);
    this.setData({
      input_value: name,
      history:true
    });
    if (this.data.searchType == 1){
      this.setData({
        productList: []
      });
    }else{
      this.setData({
        stallsList : []
      });
    }
    //搜索功能
    this.search(name);
  },

  /**
   * 点击清除隐藏历史搜索
   */
  clearHistorySearch() {
    if (this.data.searchType == 1) {
      wx.clearStorageSync("searchProductHistory");
    }else{
      wx.clearStorageSync("searchStallHistory");
    }
    this.setData({
      searchList:[],
      history:true
    })
  },

  /**
   * 搜索按钮点击事件
   */
  searchGoods() {
    wx.navigateTo({
      //页面跳转时将搜索的字段传入
      url: `../search_result/search_result?title=${this.data.active_search_val}`
    })
  },

  /**
   * input输入内容时cancel按钮的显示隐藏
   * @pram e--当前点击对象的属性集合
   */
  clearInput(e) {
    this.setData({
      active_search: true,
      cancel_icon: true,
      input_value: "",
      search_show_status: false,         //隐藏页面历史搜索和热门搜索
      btncancel_status: false,           //显示取消按钮
      btnsearch_status: true,
        history:true,
        searchList:[]
    })
  },

  /**
   * 跳到档口页面
   */
  toStall: function (e) {
    let id = e.currentTarget.dataset.id;
    console.log(id);
    wx.navigateTo({
      url: '../../index/stallStore/stallStore?stallId=' + id
    });
  },

  toProductDetail: function (e) {
    let productId = e.currentTarget.dataset.id,
      stallId = e.currentTarget.dataset.name;
    console.log(stallId);
    wx.navigateTo({
      url: '../../index/stallStoreDetails/stallStoreDetails?productId=' + productId + '&' + 'stallId=' + stallId
    });

  },

  /**
   * 点击取消返回上一级
   */
  getBack() {
    wx.navigateBack({
      delta: 1       //返回的页面层数
    })
  },

  /**
   * 初始化页面
   * @pram data--页面加载的数据
   */
  initPage: function (data) {
    this.setData({
      hot_search: data["hot_search"],          //赋值请求到的值给当前page下面的data.hot_search
      history_search: data["history_search"]   //赋值请求到的值给当前page下面的data.history_search
    });
  },

  /**
   * 换一批点击事件
   */
  changeHotItems: function () {
    //保存this对象
    const _this = this;
    //请求数据
    http({
      url: "GetChangeHotSearch",
      loading:true,
      func: (data) => {
        // 成功后加载页面
        _this.initPage(data);
      }
    })
  },

  /**
   * 点击热门搜索或历史搜索字段时自动填充到搜索框
   * @pram e--当前点击对象的属性集合
   */
  fillInputValue(e) {
    this.setData({
      active_search_val: e.target.dataset.cur_value,  //设置当前搜索字段值为选中的字段值
      input_value: e.target.dataset.cur_value,        //设置选中的字段值在输入框中
      cancel_icon: false                              //显示关闭按钮

    })
  },
    clickPerson:function(){
        var selectPerson = this.data.selectPerson;
        if(selectPerson == true){
            this.setData({
                selectPerson:false,
            })
        }else{
            this.setData({
                selectPerson:true,
            })
        }
    } ,
    //点击切换
    mySelect:function(e){
            let index = parseInt(e.target.dataset.index);
            this.setData({
              searchType: index
            }) 
            if(index == 1){
                this.setData({
                    commodity:false,
                    stalls:true,
                })
            }else{
                this.setData({
                    commodity:true,
                    stalls:false,
                })
            }
        this.setData({
            firstPerson:e.target.dataset.name,
            selectPerson:true,
        })
        this.search(this.data.input_value);
        //this.searchFunc();
    },
    onLoad:function(options){
        this.setData({
          history: false,
          commodity: true,
          stalls: true,
        });
        
        let list = [];
        if (this.data.searchType == 1) {
          list = wx.getStorageSync('searchProductHistory');
        } else {
          list = wx.getStorageSync('searchStallHistory');
        }
        this.setData({
          searchList: list
        })
    },
    onReady:function(){
        // 页面渲染完成
    },
    onShow:function(){
        // 页面显示
    },
    onHide:function(){
        // 页面隐藏
    },
    onUnload:function(){
        // 页面关闭
    },
    switchRightTab: function(e) {
        const that = this;
        let id = e.target.dataset.id;
        that.setData({
          sortType: id
        });
          http({
            url: "stock/api/queryProduct.do",
            data: { pageIndex: 1, pageSize: 10, sortType: this.data.sortType, applicationType: "1", type: 1, searchKey: this.data.input_value },
            func: (data) => {
              that.setData({
                productList: data.result.results
              });
            }
          });
    },
    goDetails: function() {
        wx.navigateTo({
            url: '../stallStoreDetails/stallStoreDetails'
        })
    },
});